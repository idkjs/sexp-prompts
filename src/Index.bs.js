// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactDOMRe = require("reason-react/src/legacy/ReactDOMRe.bs.js");
var ReactCompat = require("reason-react-compat/src/ReactCompat.bs.js");
var SExp$ReactTemplate = require("./SExp.bs.js");
var Terminal$ReactTemplate = require("./Terminal.bs.js");
var SExpEditor$ReactTemplate = require("./SExpEditor.bs.js");

var expr = SExp$ReactTemplate.parse("(module test (define (quote main) (println (string (Hello, () world)))))");

function Index$SyncView(Props) {
  var data = Props.data;
  return ReactCompat.useRecordApi({
              willReceiveProps: ReactCompat.component.willReceiveProps,
              willUnmount: ReactCompat.component.willUnmount,
              didUpdate: ReactCompat.component.didUpdate,
              shouldUpdate: ReactCompat.component.shouldUpdate,
              willUpdate: ReactCompat.component.willUpdate,
              didMount: ReactCompat.component.didMount,
              initialState: (function (param) {
                  return {
                          exp: data
                        };
                }),
              reducer: (function (exp, _state) {
                  return {
                          TAG: /* Update */0,
                          _0: {
                            exp: exp._0
                          }
                        };
                }),
              render: (function (self) {
                  return React.createElement("div", {
                              className: "SyncView"
                            }, React.createElement(SExpEditor$ReactTemplate.make, {
                                  data: self.state.exp,
                                  onUpdate: (function (x) {
                                      return Curry._1(self.send, /* Update */{
                                                  _0: x
                                                });
                                    })
                                }), React.createElement("pre", undefined, SExp$ReactTemplate.toString(self.state.exp)));
                })
            });
}

var SyncView = {
  make: Index$SyncView
};

ReactDOMRe.renderToElementWithId(React.createElement(Terminal$ReactTemplate.make, {}), "app");

exports.expr = expr;
exports.SyncView = SyncView;
/* expr Not a pure module */
